Import("environment")

import os
import sys

if os.name == "posix":
	monitor_src = "posix_monitor.c"
	if sys.platform == "msys":
		gl_lib = "OpenGL32"
	else:
		gl_lib = "GL"
elif os.name == "nt":
	monitor_src = "win32_monitor.c"
	gl_lib = "OpenGL32"

source = [
	"group.c",
	"image.c",
	"shape.c",
	"context.c",
	"thread.c",
	monitor_src
]

backends = [] # ["Software"]
libs = []

if sys.platform == "msys" or os.name == "nt":
	libs += ["GDI32", "user32", "winmm", "imm32", "ole32", "oleaut32", "OpenGL32"]

libsapphireglextra = {}

conf = Configure(environment)
if conf.CheckCHeader("vulkan/vulkan.h"):
    backends += ["Vulkan"]
if conf.CheckCHeader("GL/gl.h"):
    libsapphireglextra = SConscript(dirs=["SapphireGLExtra"], exports = ["environment"])
    backends += ["OpenGL", "OpenGL4"]
elif os.name == "nt":
    libsapphireglextra = SConscript(dirs=["SapphireGLExtra"], exports = ["environment"])
    backends += ["OpenGL"]
    libs += [libsapphireglextra]

enable_egl = conf.CheckCHeader("EGL/egl.h") and False

conf.Finish()

if enable_egl:
    environment.Append(CPPDEFINES="SAPPHIRESG_ENABLE_EGL")
else:
    environment.Append(CPPDEFINES="SAPPHIRESG_DISABLE_EGL")

environment.Append(CPPDEFINES=["SAPPHIRESG_EXPORTS"])

for b in backends:
    environment.Append(CPPDEFINES=["SAPPHIRESG_USE_" + b.upper()])
    

libs += SConscript(dirs = backends, exports = ["environment", "libsapphireglextra"])

libsapphiresg = environment.SharedLibrary("sapphiresg", source, LIBS = libs)

Return("libsapphiresg")
